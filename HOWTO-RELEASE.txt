CMake variables:

INSTDIR = share/octave/packages where

To make toolbox and package

  cmake -B BUILD
  cd BUILD
  make all
  make test

"make all" calls "make package" which creates

Creating Octave package dist/geographiclib-octave-2.0-alpha.tar.gz
Creating MATLAB toolbox dist/geographiclib_toolbox-2.0-alpha.zip

Other CMake targets
  install - installs .m files to
    ${CMAKE_INSTALL_PREFIX}/${INSTDIR}/geographiclib
  stage-dist - move packages to distrib-Octave and to central staging
    area
  deploy-dist - sync packages from staging area to SourceForge.

Documentation is primarily in README.md (accessed via github)
+ the .m files (esp Contents, geoddoc, projdoc, gedoc)
+ NEWS + DESCRIPTION.in
+ distrib-Octave/00README.md abbreviated README for package distribution

Before release:
  CMakeLists.txt
      PROJECT_VERSION_SUFFIX to ""
      RELEASE_DATE
  NEWS fix date
  check COPYING DESCRIPTION.in INDEX
  Remove alpha versions of the distribution from distrib-Octave

After release
  upload to MATLAB Central
    https://www.mathworks.com/matlabcentral/fileexchange/50605
    update blurb to refer to
      https://github.com/geographiclib/geographiclib-octave#readme
    download toolbox package (after an hour or so)
  notify Fedora maintainer: Rich Mattes <richmattes@gmail.com>
  tag git vM.N

Registered with Octave package site

https://gnu-octave.github.io/packages/geographiclib

checked out at

  ~/git/octave-packages/packages/geographiclib.yaml

Blurb for MATLAB package:
https://www.mathworks.com/matlabcentral/fileexchange/50605

Native Octave/MATLAB implementations of a subset of the C++ library,
GeographicLib. Key components of this toolbox are:

* Geodesics, direct, inverse, area calculations.
* Projections, transverse Mercator, polar stereographic, etc.
* Grid systems, UTM, UPS, MGRS.
* Geoid lookup, egm84, egm96, egm2008 geoids supported.
* Geometric transformations, geocentric, local cartesian.
* Great ellipse, direct, inverse, area calculations.
* Geodesics and coordinate conversions on a triaxial ellipsoid.

(The last two items are not present in the C++ library.)  All the
functions are vectorized and so offer speeds comparable to compiled
C++ code when operating on arrays.

Full documentation is available at

https://github.com/geographiclib/geographiclib-octave#readme
